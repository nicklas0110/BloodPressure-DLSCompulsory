version: '3.8'

services:
  doctorui:
    ports:
      - "8070:80"
    build:
      context: .
      dockerfile: ./Frontend/DoctorUI/Dockerfile
    volumes:
      - ./Frontend/DoctorUI/src:/app/src:delegated
    depends_on:
      - measurementService

  patientui:
    ports:
      - "8070:80"
    build:
      context: .
      dockerfile: ./patientweb/Dockerfile
    volumes:
      - ./patientweb/src:/app/src:delegated
    depends_on:
      - measurementService
      - patientService
  
  patient-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MYSQL_DATABASE: 'zipkin'
      MSSQL_SA_PASSWORD: "uhohst1nky!"
      ACCEPT_EULA: "Y"
    ports:
      - "1434:1434"
    volumes:
      - mssql_data_patient_db:/var/opt/mssql
    networks:
      - local_network
  
  measurement-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MYSQL_DATABASE: 'zipkin'
      MSSQL_SA_PASSWORD: "uhohst1nky!"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - mssql_data_measurement_db:/var/opt/mssql
    networks:
      - local_network
  
  seq:
    image: datalust/seq:latest
    ports:
      - "5341:5341"
      - "5342:80"
    volumes:
      - seq_data:/data
    networks:
      - local_network
    environment:
      ACCEPT_EULA: "Y"

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=zipkin-storage
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
    depends_on:
      - zipkin-storage
    networks:
      - local_network

  zipkin-storage:
    image: openzipkin/zipkin-mysql
    ports:
      - "3306:3306"
    volumes:
      - zipkin_data:/mysql/data
    networks:
      - local_network
    environment:
      - MYSQL_USER=zipkin
  
  featurehub:
    image: featurehub/party-server:latest
    restart: always
    volumes:
      - featurehub-h2-data:/db
    ports:
      - "8085:8085"
  
  
  measurementService:
    image: measurementservice
    build:
      context: .
      dockerfile: ./MeasurementService/Dockerfile
    ports:
      - "8081:80"
      - "8082:443"
    networks:
      - local_network
    depends_on:
      measurement-db:
        condition: service_started
      zipkin:
        condition: service_started
      seq:
        condition: service_started
  
  patientService:
    image: patientservice
    build:
      context: .
      dockerfile: ./PatientService/Dockerfile
    ports:
      - "8083:80"
      - "8084:443"
    networks:
      - local_network
    depends_on:
      measurement-db:
        condition: service_started
      zipkin:
        condition: service_started
      seq:
        condition: service_started


volumes:
  featurehub-h2-data:
  seq_data:
  zipkin_data:
  mssql_data_measurement_db:
  mssql_data_patient_db:
  mssql_data_db:
networks:
  local_network:
    driver: bridge
